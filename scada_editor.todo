testy
  + ulozeni souboru (tzn. bez cehokoliv nacteneho/otevreneho) => pouze header je vystupem
  + zavreni bez ulozeni kom_map.xml => OK
  + ulozeni do xml (kontrola oproti xml ze skriptu) => OK
  + ulozeni do src (kontrola oproti src originalu) => OK
  + otevreni cfgview.xml namisto kom_map.xml a vice versa => vypise chybu
  - otevreni jineho kom_map.xml => prida se proste za existujici strom

funcionalita
  bug: uvolnovani pameti NEFUNGUJE
    PtTree list nejde - mozna protoze nekde menim rucne item->name namisto pouziti PtTreeModifyItemString()
    xmlFree(data->enhanced_path) hazi SIGSEGV (xmlStrdup() nebo xmlStrcat() vraci nejaky pointer, ktery se neda uvolnit pomoci xmlFree() ???)
  bug: pridavani radku - problem s focusem (jedna pametova bunka ma 2 adresy! wtf?)
  bug: PtPrompt() hodi textovy kurzor na konec, ale pri vstupu zacne vkladat na zacatek
  bug: neciselna id zpusobi nenacteni subtree - wtf? to neodpovida XML specifikaci od W3C

otazky do mailu
  novy typ id, nebo pouzit number? (protoze jinak se id generuje v uvozovkach)
  prosim zkontrolujte vystup do src oproti originalu - zdali vyhovuje (protoze z ukazkoveho src jsou prepisovaci pravidla gramatiky na tvorbu src souboru nedeterministicka)
  tlacitko otevrit zavre nemilosrdne aktualni a otevre uplne novy soubor
  dat uzivateli vedet, ze se ulozil kom_map.xml a kom_map.src v poradku (dialogove okno)?
  PATH=/cesta/k/src2xml.sh:"$PATH"
  pamatovat si otevreny adresar (tzn. ten, kde byl cfgview.xml) z prvniho dialogoveho okna otevirani souboru
  kontrola novych ID na spravnost (mohou obsahovat pouze viz. kom_map.xml)

vim: set wrap:
